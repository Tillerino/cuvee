(set-logic ALL)
(declare-fun m () Int)
(declare-fun n () Int)
(declare-fun gcd (Int Int) Int)
(push 1)
(assert (forall ((m1 Int)) (= (gcd m1 m1) m1)))
(assert (forall ((m2 Int) (n3 Int)) (=> (< m2 n3) (= (gcd m2 n3) (gcd m2 (- n3 m2))))))
(assert (forall ((m4 Int) (n5 Int)) (=> (> m4 n5) (= (gcd m4 n5) (gcd (- m4 n5) n5)))))
(assert (not (=> (and (< 0 m) (< 0 n)) (and (and (and (and (< 0 m) (< 0 n)) (forall ((m7 Int)) (=> (and (< 0 m7) (= m7 (gcd m n))) (and (< 0 m7) (= m7 (gcd m n)))))) (forall ((n6 Int) (m7 Int)) (=> (and (not (not (= m7 n6))) (and (< 0 m7) (< 0 n6))) (and (< 0 m7) (= m7 (gcd m7 n6)))))) (forall ((n6 Int) (m7 Int)) (=> (and (not (= m7 n6)) (and (< 0 m7) (< 0 n6))) (and (=> (< m7 n6) (and (and (=> (not (= m7 (- n6 m7))) (and (<= 0 (+ m7 (- n6 m7))) (< (+ m7 (- n6 m7)) (+ m7 n6)))) (and (< 0 m7) (< 0 (- n6 m7)))) (forall ((m9 Int)) (=> (and (< 0 m9) (= m9 (gcd m7 (- n6 m7)))) (and (< 0 m9) (= m9 (gcd m7 n6))))))) (=> (not (< m7 n6)) (and (and (=> (not (= (- m7 n6) n6)) (and (<= 0 (+ (- m7 n6) n6)) (< (+ (- m7 n6) n6) (+ m7 n6)))) (and (< 0 (- m7 n6)) (< 0 n6))) (forall ((m11 Int)) (=> (and (< 0 m11) (= m11 (gcd (- m7 n6) n6))) (and (< 0 m11) (= m11 (gcd m7 n6))))))))))))))
(check-sat)
(pop 1)
