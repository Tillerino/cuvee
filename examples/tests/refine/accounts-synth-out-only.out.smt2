(set-logic ALL)
(declare-fun R (Int Int Int) Bool)
(push 1)
(assert (forall ((balance Int) (debit Int) (credit Int)) (= (R balance debit credit) (= balance (+ credit (- 0 debit))))))
(assert (not (and (forall ((balance Int) (debit Int) (credit Int)) (=> (and true true true) (and true (and true (R 0 0 0))))) (forall ((balance Int) (amount Int) (new-balance Int) (debit Int) (credit Int) (|amount'| Int) (|increased'| Int)) (=> (and (= amount |amount'|) (> amount 0) (R balance debit credit)) (and (> |amount'| 0) (and (= (+ balance amount) (- (+ credit |amount'|) debit)) (R (+ balance amount) debit (+ credit |amount'|)))))) (forall ((balance Int) (amount Int) (new-balance Int) (debit Int) (credit Int) (|amount'| Int) (|decreased'| Int)) (=> (and (= amount |amount'|) (> amount 0) (<= amount balance) (R balance debit credit)) (and (> |amount'| 0) (<= |amount'| (- credit debit)) (and (= (- balance amount) (- credit (+ debit |amount'|))) (R (- balance amount) (+ debit |amount'|) credit))))))))
(check-sat)
(pop 1)
